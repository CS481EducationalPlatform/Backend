# Generated by Django 5.1.6 on 2025-02-19 05:33

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('courseID', models.AutoField(primary_key=True, serialize=False)),
                ('courseName', models.CharField(max_length=100)),
                ('courseDescription', models.TextField()),
                ('isApproved', models.BooleanField(default=False)),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('tagID', models.AutoField(primary_key=True, serialize=False)),
                ('tagName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('topicID', models.AutoField(primary_key=True, serialize=False)),
                ('topicName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=320, unique=True)),
                ('username', models.CharField(max_length=100, null=True)),
                ('password', models.CharField(max_length=100)),
                ('isTeacher', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Lessons',
            fields=[
                ('lessonID', models.AutoField(primary_key=True, serialize=False)),
                ('lessonName', models.CharField(max_length=100)),
                ('lessonDescription', models.TextField()),
                ('courseID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.courses')),
            ],
        ),
        migrations.CreateModel(
            name='Uploaded',
            fields=[
                ('fileID', models.AutoField(primary_key=True, serialize=False)),
                ('videoURL', models.CharField(blank=True, max_length=100, null=True)),
                ('fileBlob', models.BinaryField(blank=True, null=True)),
                ('lessonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.lessons')),
            ],
        ),
        migrations.AddField(
            model_name='courses',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend_app.userinfo'),
        ),
        migrations.CreateModel(
            name='AppliedTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend_app.courses')),
                ('tagID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend_app.tags')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('courseID', 'tagID'), name='UniqueApplyTag')],
            },
        ),
        migrations.CreateModel(
            name='AppliedTopics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend_app.courses')),
                ('topicID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend_app.topics')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('courseID', 'topicID'), name='UniqueApplyTopic')],
            },
        ),
        migrations.AddConstraint(
            model_name='courses',
            constraint=models.UniqueConstraint(fields=('userID', 'courseName'), name='UniqueCourseNamePerUser'),
        ),
    ]
